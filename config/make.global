# make path
export MAKE := make

# make flag
MAKEFLAG := -s --no-print-directory

# object dir
OBJ_DIR := ../obj

# include file path
INC_PATH := -I../include

# compile marcro
CC := gcc

# compile flags
CCFLAG := --std=c++11 -g -fPIC -Wall $(INC_PATH) -D_B_DEBUG_
OBJCCFLAG := $(CCFLAG) -c

# recursive make and clean
.PHONY: build-subdirs
build-subdirs: $(DIRS)

.PHONY: $(DIRS)
$(DIRS):
	@$(MAKE) $(MAKEFLAG) -C $@ all

.PHONY: clean-subdirs
clean-subdirs:
	@for dir in $(DIRS); do \
		$(MAKE) $(MAKEFLAG) -C $$dir clean; \
	done

# dependencies
%.o: %.c*
	@echo -e "\t" CC $(OBJCCFLAG) $< -o $(OBJ_DIR)/$@
	@$(CC) $(OBJCCFLAG) $< -o $(OBJ_DIR)/$@
